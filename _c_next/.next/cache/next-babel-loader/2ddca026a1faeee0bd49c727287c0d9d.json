{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"E:\\\\MONEYweb\\\\JOB\\\\4_myActivity\\\\0_REPO\\\\3_React_Practise\\\\c_next\\\\pages\\\\post\\\\[template].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport { MainLayout } from '../../layouts/MainLayout';\nimport { useState, useEffect } from 'react';\nexport default function Post(_ref) {\n  _s();\n\n  var serverPost = _ref.post;\n  var router = useRouter(); // console.log('router: ', router);\n\n  var _useState = useState(serverPost),\n      post = _useState[0],\n      setPost = _useState[1];\n\n  console.log('post: ', post);\n  useEffect(function () {\n    if (!serverPost) {\n      /*#__PURE__*/\n      _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"http://localhost:4200/posts/\".concat(post.template));\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return response.json();\n\n              case 5:\n                data = _context.sent;\n                setPost(data);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n    }\n  }, []);\n\n  if (!post) {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }\n    }, \"Loading...\");\n  }\n\n  return __jsx(MainLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 8\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, post.title, \" \"), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, post.body), __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Go back to \", __jsx(Link, {\n    href: \"/posts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 28\n    }\n  }, \" POSTS\")));\n}\n\n_s(Post, \"Bcb0pP8KV5YM/VCf6jIwsU51AWA=\", false, function () {\n  return [useRouter];\n});\n\n_c = Post;\n\nPost.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(ctx) {\n    var response, post;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (ctx.req) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", {\n              post: null\n            });\n\n          case 2:\n            _context2.next = 4;\n            return fetch(\"http://localhost:4200/posts/\".concat(ctx.query.template));\n\n          case 4:\n            response = _context2.sent;\n            _context2.next = 7;\n            return response.json();\n\n          case 7:\n            post = _context2.sent;\n            return _context2.abrupt(\"return\", {\n              post: post\n            });\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}(); // <h1><Link href={'/'}>Post router.query.template = </Link>{router.query.template}</h1>\n// router: ServerRouter {\n//     route: '/post/[template]',\n//     pathname: '/post/[template]',\n//     query: {},\n//     asPath: '/post/[template]',\n//     basePath: '',\n//     events: undefined,\n//     isFallback: false\n// }\n// ответ клиенту(WebDevTools) router: {\n//     pathname: \"/post/[template]\",\n//     route: \"/post/[template]\",\n//     query: {\n//         …},\n//     asPath: \"/post/id\",\n//     components: {\n//         …},\n//     …\n// }\n// asPath: \"/post/id\" // !!! из адресной строки, где отрисована страница...Зачем возвращать мне набранный адрес?\n// back: ƒ()\n// basePath: \"\"\n// beforePopState: ƒ()\n// components: {\n//         /post/ [template]: {\n//             …},\n//         /_app: {…}}\n//         events: {\n//             on: ƒ,\n//             off: ƒ,\n//             emit: ƒ\n//         }\n//         isFallback: false\n//         pathname: \"/post/[template]\"\n//         prefetch: ƒ()\n//         push: ƒ()\n//         query: {\n//             template: \"id\"\n//         } // ключ - название файла !\n//         reload: ƒ()\n//         replace: ƒ()\n//         route: \"/post/[template]\"\n//         __proto__: Object\n\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["E:/MONEYweb/JOB/4_myActivity/0_REPO/3_React_Practise/c_next/pages/post/[template].js"],"names":["useRouter","Link","MainLayout","useState","useEffect","Post","serverPost","post","router","setPost","console","log","fetch","template","response","json","data","title","body","getInitialProps","ctx","req","query"],"mappings":";;;;;;;;AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,IAAT,OAAkC;AAAA;;AAAA,MAAbC,UAAa,QAAnBC,IAAmB;AAC7C,MAAMC,MAAM,GAAGR,SAAS,EAAxB,CAD6C,CAE7C;;AAF6C,kBAGrBG,QAAQ,CAACG,UAAD,CAHa;AAAA,MAGtCC,IAHsC;AAAA,MAGhCE,OAHgC;;AAI7CC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,IAAtB;AAEAH,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI,CAACE,UAAL,EAAiB;AACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAC2BM,KAAK,uCAAgCL,IAAI,CAACM,QAArC,EADhC;;AAAA;AACUC,gBAAAA,QADV;AAAA;AAAA,uBAEuBA,QAAQ,CAACC,IAAT,EAFvB;;AAAA;AAEUC,gBAAAA,IAFV;AAGIP,gBAAAA,OAAO,CAACO,IAAD,CAAP;;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKH;AACJ,GARQ,EAQN,EARM,CAAT;;AAWA,MAAI,CAACT,IAAL,EAAW;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH;;AACD,SACG,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACU,KAAV,MADL,EAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFL,EAGK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIV,IAAI,CAACW,IAAT,CAHL,EAIK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAe,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAf,CAJL,CADH;AAQH;;GA5BuBb,I;UACLL,S;;;KADKK,I;;AA8BxBA,IAAI,CAACc,eAAL;AAAA,uEAAuB,kBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACdA,GAAG,CAACC,GADU;AAAA;AAAA;AAAA;;AAAA,8CACE;AAACd,cAAAA,IAAI,EAAE;AAAP,aADF;;AAAA;AAAA;AAAA,mBAGIK,KAAK,uCAAgCQ,GAAG,CAACE,KAAJ,CAAUT,QAA1C,EAHT;;AAAA;AAGbC,YAAAA,QAHa;AAAA;AAAA,mBAIAA,QAAQ,CAACC,IAAT,EAJA;;AAAA;AAIbR,YAAAA,IAJa;AAAA,8CAKZ;AACHA,cAAAA,IAAI,EAAJA;AADG,aALY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA,I,CAWI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {useRouter} from 'next/router'\r\nimport Link from 'next/link'\r\n\r\nimport {MainLayout} from '../../layouts/MainLayout'\r\nimport { useState, useEffect } from 'react'\r\n\r\nexport default function Post({post: serverPost}) {\r\n    const router = useRouter()\r\n    // console.log('router: ', router);\r\n    const [post, setPost] = useState(serverPost)\r\n    console.log('post: ', post);\r\n\r\n    useEffect(() => {\r\n        if (!serverPost) {\r\n            async () => {\r\n                const response = await fetch(`http://localhost:4200/posts/${post.template}`)\r\n                const data = await response.json()\r\n                setPost(data)\r\n            }\r\n        }\r\n    }, [])\r\n\r\n\r\n    if (!post) {\r\n        return <h1>Loading...</h1>\r\n    }\r\n    return (\r\n       <MainLayout>\r\n            <h1>{post.title} </h1>\r\n            <hr/>\r\n            <p>{post.body}</p>\r\n            <h5>Go back to <Link href=\"/posts\"> POSTS</Link></h5>\r\n       </MainLayout>\r\n    )\r\n}\r\n\r\nPost.getInitialProps = async (ctx) => {\r\n    if (!ctx.req) return {post: null}\r\n\r\n    const response = await fetch(`http://localhost:4200/posts/${ctx.query.template}`)\r\n    const post = await response.json()\r\n    return {\r\n        post\r\n    }\r\n}\r\n\r\n\r\n    // <h1><Link href={'/'}>Post router.query.template = </Link>{router.query.template}</h1>\r\n// router: ServerRouter {\r\n//     route: '/post/[template]',\r\n//     pathname: '/post/[template]',\r\n//     query: {},\r\n//     asPath: '/post/[template]',\r\n//     basePath: '',\r\n//     events: undefined,\r\n//     isFallback: false\r\n// }\r\n// ответ клиенту(WebDevTools) router: {\r\n//     pathname: \"/post/[template]\",\r\n//     route: \"/post/[template]\",\r\n//     query: {\r\n//         …},\r\n//     asPath: \"/post/id\",\r\n//     components: {\r\n//         …},\r\n//     …\r\n// }\r\n// asPath: \"/post/id\" // !!! из адресной строки, где отрисована страница...Зачем возвращать мне набранный адрес?\r\n// back: ƒ()\r\n// basePath: \"\"\r\n// beforePopState: ƒ()\r\n// components: {\r\n//         /post/ [template]: {\r\n//             …},\r\n//         /_app: {…}}\r\n//         events: {\r\n//             on: ƒ,\r\n//             off: ƒ,\r\n//             emit: ƒ\r\n//         }\r\n//         isFallback: false\r\n//         pathname: \"/post/[template]\"\r\n//         prefetch: ƒ()\r\n//         push: ƒ()\r\n//         query: {\r\n//             template: \"id\"\r\n//         } // ключ - название файла !\r\n//         reload: ƒ()\r\n//         replace: ƒ()\r\n//         route: \"/post/[template]\"\r\n//         __proto__: Object\r\n"]},"metadata":{},"sourceType":"module"}